worker_processes 1;

events {
	worker_connections	1024;
}

http {
	# RTMP Streaming Server
	server {
		listen 80;
		server_name live.watchme.io;
		root /home/live/encoding;
		location / {
			add_header Access-Control-Allow-Origin *;
			add_header Cache-Control no-cache;
			try_files $uri $uri/ /index.html;
		}
	}
	# Stat Server
	server {
		listen 80;
		server_name stat.watchme.io;
		location / {
			rtmp_stat all;
		}
	}
}

rtmp_auto_push on;

rtmp {

	server {

		listen 1935;
		chunk_size 4096;
		notify_method get;

		# RTMP Master Stream
		application stream {

			# Live streaming
			live on;
			drop_idle_publisher 30s;

			# wait for a keyframe, fixes delayed stream starts
			wait_video on;

			# Handle Events
			on_publish http://localhost/pubauth;
			#on_done http://watchme.io/notify?e=stop;
			#on_play http://watchme.io/notify?e=start;

			# Dash Stream
			dash on;
			dash_nested on;
			dash_path /home/live/encoding/dash;

			# Re-Encode for HLS
			exec_push /usr/local/bin/ffmpeg -threads 1 -i rtmp://127.0.0.1/stream/$name -vcodec libx264 -vprofile baseline -g 10 -acodec libfaac -ar 44100 -ac 1 -f flv rtmp://127.0.0.1/hls/$name;

			# Save a small bit of the stream for thumbnail generation
			recorder thumbnail {
				record_max_frames 1;
				record_interval 60s;
				record video;
				record_path /home/live/encoding/flv;
				# Small
				exec_record_done /usr/local/bin/ffmpeg -threads 1 -i $path -vcodec png -vframes 1 -s 640x360 -y /home/live/encoding/png/${name}_small.png;
				exec_record_done /usr/local/bin/ffmpeg -threads 1 -i $path -qscale:v 5 -vframes 1 -s 640x360 -y /home/live/encoding/jpg/${name}_small.jpg;
				# Large
				exec_record_done /usr/local/bin/ffmpeg -threads 1 -i $path -vcodec png -vframes 1 -y /home/live/encoding/png/$name.png;
				exec_record_done /usr/local/bin/ffmpeg -threads 1 -i $path -qscale:v 5 -vframes 1 -y /home/live/encoding/jpg/$name.jpg;
			}

			# Save the stream and convert when finished
			recorder storage {
				record all;
				record_path /home/live/encoding/flv;
				record_unique on;
				record_interval 60m;
				exec_record_done nice -n 19 /usr/local/bin/ffmpeg -threads 1 -i $path -c:a libfaac -b:a 96k -c:v libx264 /home/live/encoding/mp4/$basename.mp4;
				#exec_record_done http://watchme.io/notify?e=store&name=$name&basename=$basename;
			}

		}

		# VOD of stored streams
		application vod {
			play /home/live/encoding/mp4;
		}

		# HLS Stream
		application hls {
			live on;
			hls on;
			hls_nested on;
			hls_path /home/live/encoding/hls;
		}

	}
	
}
